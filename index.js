require("dotenv/config");
const TelegramBot = require(`node-telegram-bot-api`)
const scanUrl = require("./modules/scanUrl.js");

const TOKEN = process.env.TOKEN_TELEGRAM

const bot = new TelegramBot(TOKEN, {
    polling: true
})


//bot.onText(/^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$/, (msg, match) => {
bot.on("message", msg => {
    const chatId = msg.chat.id;
    const clientId = msg.clientId;
    const msgId = msg.message_id

    if (msg.text.link()) {

        bot.sendMessage(chatId, "Link identificado!")
        let link = msg.text.substr(msg.text.lastIndexOf("http"))
        try {
            scanUrl(link).then(result => {
                if (result.modal == "results_modal_safe") {
                    bot.sendMessage(chatId, "✅O link parece estar limpo de ameaças");
                } else if (result.modal == "results_modal_malicious") {
                    bot.sendMessage(chatId, "⚠ O Link foi identificado como sendo Suspeito!⚠");
                    bot.deleteMessage(chatId, msgId)
                    bot.sendMessage(chatId, "🛡O link foi apagado por questões de segurança!")

                    bot.onReplyToMessage(chatId, msgId, bot.sendMessage(chatId, "🚫 É proibido enviar links maliciosos e você está sujeito a punições! ⚰"))



                } else if (result.modal == "results_modal_fail") {
                    bot.sendMessage(chatId,
                        "Falha ao analisar o link❗\nSempre tenha cuidado ao acessar links ☠"
                    );
                } else {
                    bot.sendMessage(chatId,
                        "O Link não pode ser analisado❗\nSempre tenha cuidado ao acessar links ☠"
                    );
                }
            });
        } catch (error) {

        }
    }
});